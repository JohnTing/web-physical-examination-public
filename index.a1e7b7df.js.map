{"mappings":"imBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,uCCnBTE,EAAAC,QAAiBC,OAAoB,KAAOC,EAAA,SAAAC,QAA6C,UAAWC,MAAK,IAAMF,EAAc,U,ICA7HA,EAAA,SAAAG,SAA8CC,KAAKC,MAAM,oECGzDL,EAAA,SAAwBE,MAAKI,IAC3BC,EAAWD,EAAIE,SACQC,OAAOC,SAASC,eAAe,kBACvCC,YAAc,gBAAgB,IAG/C,IAAIL,EAAW,CAACM,EAAWC,IAClB,IAAIC,SAAiB,KAC1BC,MAAM,qBACC,KAIX,MAAMC,EAAcR,OAAOC,SAASC,eAAe,SAC7CO,EAAUT,OAAOC,SAASC,eAAe,WACzCQ,EAAYV,OAAOC,SAASC,eAAe,SAC3CS,EAAaX,OAAOC,SAASC,eAAe,cAE5CU,GADcZ,OAAOC,SAASC,eAAe,eAClCF,OAAOC,SAASC,eAAe,a,8IA8BtCW,iBAAA,c,kBACAb,OAAA,C,MACAc,EAAA,IAAAC,W,EAEHC,OAAOvB,MAAK,KACXmB,EAAKT,YAAA,UACJc,EAAA,8BAELH,EAAAI,eAAA,KAEDD,EAAA,wDAGDH,EAAAK,UAAAC,IACAH,EAAQ,sBAELA,EAAQG,EAAMC,cAMfvB,EACFsB,EAAAC,aAAAX,EAAmCP,YAAA,IACvB,IACRmB,OAAMC,IACNN,EAAsB,gCAAmBM,KAAS,G,MAInDN,EAAA,+B","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7f4ea8163e670053.js","node_modules/@parcel/runtime-js/lib/runtime-e47bb056f5377db6.js","src/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"7EIhy\"))).then(() => parcelRequire('5toDZ'));","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1LzKV\\\":\\\"index.a1e7b7df.js\\\",\\\"7EIhy\\\":\\\"firebaseApp.f49ad63e.js\\\"}\"));","\r\n\r\n\r\nimport(\"./firebaseApp\").then(app => {\r\n  pushData = app.pushData;\r\n  const firebaseStatus = window.document.getElementById(`firebaseStatus`) as HTMLDivElement;\r\n  firebaseStatus.textContent = \"載入完畢，連線至資料庫...\";\r\n});\r\n\r\nlet pushData = (a: string, b: string) => {\r\n  return new Promise<boolean>(() => {\r\n    alert(\"firebase 還未載入完畢。\");\r\n    return false;\r\n  });\r\n};\r\n\r\nconst startButton = window.document.getElementById(\"start\") as HTMLButtonElement;\r\nconst logText = window.document.getElementById(\"logText\") as HTMLTextAreaElement;\r\nconst placeText = window.document.getElementById(\"place\") as HTMLSpanElement;\r\nconst testButton = window.document.getElementById(\"testButton\") as HTMLButtonElement;\r\nconst buttonGroup = window.document.getElementById(`buttonGroup`) as HTMLDivElement;\r\nconst nfcTText = window.document.getElementById(\"nfcTText\") as HTMLSpanElement;\r\n\r\n\r\n/*\r\nconst placeNames = [\"健檢櫃台\", \"身高體重\", \"血壓脈搏\", \"心電檢查\", \"家醫診斷\", \"抽血檢查\", \"X光檢查\", \"牙醫檢查\", \"眼科檢查\"];\r\n\r\nplaceNames.map((v, i, a) => {\r\n  var button = document.createElement(\"button\");\r\n  button.textContent = v;\r\n  button.className = \"btn btn-success\";\r\n  button.onclick = () => {\r\n    placeText.textContent = v;\r\n  };\r\n  buttonGroup.appendChild(button);\r\n});\r\n*/\r\nstartButton.addEventListener(\"click\", () => {\r\n  if (\"NDEFReader\" in window) {\r\n    const ndef = new NDEFReader();\r\n    ndef\r\n      .scan()\r\n      .then(() => {\r\n        nfcTText.textContent = \"NFC 已啟動\";\r\n        log(\"Scan started successfully.\");\r\n        ndef.onreadingerror = () => {\r\n          log(\"Cannot read data from the NFC tag. Try another one?\");\r\n        };\r\n        ndef.onreading = (event) => {\r\n          log(\"NDEF message read.\");\r\n          log(event.serialNumber);\r\n          // log(event.message.records.map((v, i, a) => {JSON.stringify(v)}).join(\"\\n\"));\r\n          pushData(event.serialNumber, placeText.textContent + \"\");\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        log(`Error! Scan failed to start: ${error}.`);\r\n      });\r\n  } else {\r\n    log(\"NDEFReader not in window\");\r\n  }\r\n});\r\n\r\nfunction log(message: string) {\r\n  logText.value += message + \"\\n\";\r\n  logText.scrollTop = logText.scrollHeight - logText.clientHeight;\r\n\r\n  if(logText.value.length > 5000) {\r\n    logText.value = logText.value.substring(logText.value.length - 5000);\r\n  }\r\n}\r\n\r\n\r\nif (testButton) {\r\n  testButton.onclick = async (ev) => {\r\n    for (let i = 0; i < 100; i++) {\r\n      const tempPlace = \"place_\" + Math.floor(Math.random() * 8);\r\n      const success = await pushData(\"test\" + (i % 80), tempPlace);\r\n      if(!success) {\r\n        return;\r\n      } \r\n    }\r\n  };\r\n}\r\n\r\n\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","import","parcelRequire","resolve","then","register","JSON","parse","app","$b4e14b6b8da86996$var$pushData","pushData","window","document","getElementById","textContent","a","b","Promise","alert","$b4e14b6b8da86996$var$startButton","$b4e14b6b8da86996$var$logText","$b4e14b6b8da86996$var$placeText","$b4e14b6b8da86996$var$testButton","$b4e14b6b8da86996$var$nfcTText","addEventListener","ndef","NDEFReader","scan","$b4e14b6b8da86996$var$log","onreadingerror","onreading","event","serialNumber","catch","error"],"version":3,"file":"index.a1e7b7df.js.map"}